<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--动态代理 namespace必须是mapper接口的全路径名-->
<mapper namespace="com.mybatis.mapper.UserMapper">
    <!--resultMap 将pojo的属性和数据库table的属性关联
        和hibernate的映射文件类似-->
    <resultMap id="userResultMap" type="user">
        <id property="user_id" column="user_id"/>
        <result property="username" column="username"/>
        <result property="user_password" column="user_password"/>
        <result property="user_age" column="user_age"/>
        <!--配置一对多关系-->
        <collection property="linkman" ofType="Linkman">
            <id property="link_id" column="link_id"/>
            <result property="link_name" column="link_name"/>
            <result property="link_phone" column="link_phone"/>
            <result property="sex" column="link_sex"/>
        </collection>
    </resultMap>
    
    <!--parameterType 入参 需要输入的类型
        resultType 返回值 返回查找的类型
    -->
    <select id="getUserById" parameterType="int" resultType="com.mybatis.pojo.User">
        select * from user where user_id=#{id}
    </select>
    <select id="getUserByName" parameterType="String" resultType="com.mybatis.pojo.User">
        SELECT * from user WHERE username LIKE '%${value}%'
    </select>
    <insert id="insertUser" parameterType="com.mybatis.pojo.User">
        INSERT into user(username, user_password, user_age) values (#{username},#{user_password},#{user_age})
    </insert>
    <update id="updateUser" parameterType="com.mybatis.pojo.User">
        UPDATE user set username =#{username} where user_id=#{user_id}
    </update>
    <delete id="deleteUser" parameterType="int">
        delete from user where user_id=#{id}
    </delete>
    <!--传递pojo的包装对象-->
    <select id="queryUserByQueryVo" parameterType="QueryVo" resultType="user">
        select * from user where username like '%${user.username}%'
    </select>
    <!--查询用户表数据条数-->
    <!--count(*)要挨着-->
    <select id="userCount" resultType="int">
        select count(*) from user
    </select>

    <!--若pojo的属性与数据的字段类型不一样 则采用resultMap 映射到pojo-->
    <select id="queryAll" resultMap="userResultMap">
        select *from user
    </select>
    
    <!--条件查询 if标签-->
    <select id="queryUserByIf" parameterType="user" resultMap="userResultMap">
      select * from user where 1=1
      <if test="username !=null and username !=''">
          and username like '%${username}%'
      </if>
      <if test="user_age !=null and user_age!=0">
          and user_age = #{user_age}
      </if>
    </select>

    <!--条件查询 where标签-->
    <select id="queryUserByWhere" parameterType="user" resultMap="userResultMap">
        select * from user
        <where>
            <if test="username!=null and username!=''">
                and username like '%${username}%'
            </if>
            <if test="user_password!=null and user_password!=''">
                and user_password =#{user_password}
            </if>
        </where>
    </select>

    <!--一对多查询-->
    <select id="userToLinkman" resultMap="userResultMap">
        SELECT u.user_id,u.username,u.user_password ,u.user_age ,l.link_id, l.link_name,l.link_phone,l.link_sex
        FROM user u left join linkman l
          on l.link_user_id=u.user_id
    </select>
</mapper>
